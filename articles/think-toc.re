= 本の構成を仮組みする

技術同人誌を書くときに一番難しいことは、一体何でしょうか。それは、@<b>{書き始める}ことです。
イベントに当選してサークルスペースをもらったときは「さあ、原稿を書くぞ！」と気合が入っているものです。
しかし、いざ原稿を書きはじめようとすると筆が止まってしまう人は多いものです。

筆が止まってしまう時間を少しでも減らすためには、準備がとても大切です。

== 本の仕様を決定する

Webアプリケーションや電子工作は、作り始める前に設計を行います。どんなものを作るか、仕様はどうするかなどを検討してから製造を行った方が手戻りがないためです。
これは、@<b>{技術同人誌も同じです}。まずはじめに、どんな本を作るか決めましょう。決めやすい項目から手をつけます。こうすると、「進捗している感」を演出できるからです。

決めるべき仕様を示します。

=== 頒布方法

まずはじめに決めるべきは、@<b>{本を印刷するのか}どうかです。印刷する場合、印刷所の示す期限@<b>{の前日日}が完了期限となるためです。

前日としているのは、@<b>{印刷所の入稿締め切りは日付が変わるまでではないからです}。これは大事なのでもう一度言います。
@<b>{印刷所は、その日の15時までなどと、1日の終わりまでは待ってくれない}からです。

つまり、入稿用データ（これを@<code>{完全原稿}と言います）は締め切り日の前日までに完成している必要があるのです。送付時のトラブルなどを考えると、前日までに入稿が完了していることが望ましいです。
加えて、ページ数が多い場合は締め切りが早まる場合があります。技術同人誌を冊子で頒布するのであれば、@<b>{早めに行動する必要があります}。

電子版のみ頒布するのであれば、締め切りはある程度融通が効きます。ダウンロードカードは家でも印刷できますし、キンコーズでも印刷できます。
最悪、イベント前日に紙だしすることもできます。

ただし、名刺カードにQRコードを載せて印刷したいのであれば話は変わります。印刷所の締め切りに合わせて名刺用データを作る必要があります。

締め切りから逆算して計算できるようにするために、まずは頒布形態を決めましょう。これ以降は冊子を同人印刷所で印刷してもらうことを前提に話を進めます。

=== 印刷所を決める

次に決めるべきは、@<b>{どの印刷所を利用するか}です。締め切り日を概算するためです。初めて同人誌を作成するのであれば、@<b>{イベントのバックアップを行なっている印刷所を利用しましょう}。
これらの印刷所は、刷り上がった本を印刷所から自分のスペースへ@<code>{直接搬入}してくれます。@<code>{宅配搬入}の場合、本の集積所に自分の荷物を引き取りに行く必要があります。

宅配搬入の場合、印刷所から宅配業者を経由してイベント会場へ本が届きます。このとき、荷物が行方不明になる事件がおきることがあります。直接搬入であれば、印刷所が責任を持って会場へ本を運んでくれます。
こだわりがない限り、直接搬入ができる印刷所を利用しましょう。

技術書典であれば、@<code>{有限会社 ねこのしっぽ}さんを利用するか、@<code>{株式会社 日光企画}さんを利用することになります。

私はずっとねこのしっぽさんを利用しています。
Webフォームで発注から入稿まで完結する点・本の仕様がある程度決まっており迷いにくい点がとても嬉しいです。原稿のチェックも入念に行なっていただけます。
恥ずかしながら、自分では気づかないような誤字脱字を指摘いだだくこともあります。

日光企画さんも同人誌界隈で有名な印刷所です。表紙の加工種別が多く、凝った装丁の本を作ることができそうです。サポートの評判も良いと聞いています。

ただし、印刷所の手厚いサポートを受けるには条件があります。@<b>{締め切り日は厳守、できる限り締め切り日より前に入稿する}ことです。
原稿に不備があった場合、不備の内容を伝える電話がかかってくることがあります。この場合、修正期限は@<b>{電話がかかってきた当日中}となります。修正箇所が多いと大変です。
繁忙期の場合、チェック量が減ることもあります。これは相手にするサークルが多いので仕方のないことです。

しかし、期限より前に入稿すれば@<b>{修正期限を少し伸ばすことができます}。また体感とはなりますが、@<b>{原稿のチェックも丁寧にしていただけます}。
締め切りに遅れると、印刷所の方に残業を強要することになります。社会人同士（学生の方はごめんなさい）、残業を減らせるように努力しましょう。

印刷所を早く決めて、締め切り日を概算で出すべきです。

=== 本のサイズを決める

本のサイズを先に決める理由は、@<b>{組版時にページ数が変わるから}です。
同人印刷のお値段は、@<code>{本のサイズ × ページ数 × 部数}で決定されます。印刷所の相見積もりをとる場合、3つの項目が必要となります。

ページ数は書きあがってみないとわかりません。残りの2項目を使って値段の比較を行うと良いでしょう。

肝心の仕様ですが、@<b>{大学ノートのサイズが"B5"}、@<b>{小さめの技術書のサイズが"A5"}です。選ぶ基準の目安を示しますが、最後は自分の好みで決めましょう。

 * B5を選ぶと良い場合
 ** コードブロックをたくさん載せたい
 ** 文量が多くなることが予想される
 ** 同人誌感を出したい
 ** 見栄えが良い同人誌を作りたい
 * A5を選ぶと良い場合
 ** 少ない文字でページ数を稼ぎたい
 ** 手軽に読んでほしい
 ** 保管スペースを取りたくない
 ** 印刷費を安くしたい

ページ数はレイアウトや原稿用紙の設定にも関わってきます。そのため、本を書き始める前に決めることをおすすめします。

=== 組版ツールを決める

組版ツールは事前に決めておくと良いでしょう。2ヶ月弱の期間で組版ツールを試しつつ、本文を書くのは無謀に近いです。
主要な組版ツールを表にまとめました。ご自分の趣味嗜好に合わせて選択しましょう。

//table[tools][技術同人誌で使われる組版ツール]{
ツール名  ファイルの保存形式  PDF出力 バージョン管理  コードスニペットの利用  環境構築の難易度  補足
Re:VIEW .re/テキスト  △（出力にはTeXが必要） ○ ○ △ TeX混みで環境を作るのは難しいが、Dockerイメージが存在する
Word .docx/バイナリ  ○ ×  × ○ ライセンスの購入が必要＆対応している印刷所は多い
Pandoc  色々あるので公式HP参照（.mdなど） △（出力にはTeXが必要）  ○ ○（Markdown形式の場合） △  組版ツールではないため、ファイル形式を変換した後に調整が必要
一太郎  .jtd./バイナリ  ○  ×  × ○  日本語特化の文章校正機能と有償フォント・利用できる画像をソフトに同梱など、文章を書くことに特化しすぎているワープロソフト
Google Documents  ダウンロード形式による  ○  △（簡易的なバージョン管理）  ×  ○  複数人の同時編集が可能だが、凝った装丁をするのには向かない
//}

テキスト形式で原稿データを保存するツールは@<b>{原稿の静的検査ツールやバージョン管理ツールの恩恵を受けやすい}というメリットがあります。
一方、バイナリ形式で原稿データを保存するツールは@<b>{環境構築や原稿のスタイルを調整するのが楽・入稿しやすい}というメリットがあります。

できれば慣れているものを利用するか、印刷所が指定する形式に出力できるツールを使うべきです。
また、TeXの環境構築はかなり面倒で難しいです。先に環境は作成しておきましょう。

複数人で執筆する場合、面倒でもGitリポジトリ管理できる形式で作成すると良いでしょう。入稿直前に原稿がコンフリクトしてしまうと、目も当てられません。

==  目次を立てる

イベントに申し込む際は@<code>{頒布物の概要}を記述しているはずです。

次の通りに進めれば、目次ができてゴールが見えてきます。

1. **思いつくままに伝えたいことを羅列する**
2. **羅列した項目を仲間わけする**
3. **仲間わけしたものに名前をつける**
4. **各項目内で伝わりやすいように順序を入れ替える**

== 思いつくままに伝えたいことを羅列する

**ブレインストーミング**という技法をご存知でしょうか。

[https://kotobank.jp/word/%E3%83%96%E3%83%AC%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%9F%E3%83%B3%E3%82%B0-180594:embed:cite]

> ブレインストーミング(brainstorming)とは、数名毎のチーム内で1つのテーマに対しお互いに意見を出し合う事で沢山のアイディアを生産し問題の解決に結び付ける創造性開発技法の事をいいます。

同人誌を作る際は、1人またはサークルのメンバーでやることになるかと思います。

専用のアプリケーションを使うもよし、ツールを使うもよし、箇条書きでMarkdownを作るもよしと何でも良いのですが、大事なことが1点あります。それは、**思いついたことをしっかりと出す**ことです。

文章を書き出せない人は「このネタは別の人とかぶるかも」「正しくないかも」「こんなものみんな知っているからな」と、アイデアを捨ててしまう傾向があります。いますぐやめましょう。
**正しい/正しくないは後で考える**。これが重要です。

思いついたアイデアはあとで精査すれば良いからです。付箋を使ってアイデア出しをしておくと、精査がしやすいです。技術同人誌を書くのがはじめての人は付箋を使ってアイデア出しをすると良いでしょう。


[http://www.ritsumei.ac.jp/~yamai/kj.htm]



== 羅列した項目を仲間わけする

仲間わけをする基準はあなたの書きたいことによりますが、一例をあげておきます。『[Elastic Stackで作るBI環境](http://amzn.asia/d/be7bGtk)』という本を書いたときを例にあげます（抜粋です）。

 * 利用する技術の基礎知識・概要
 ** Elastic Stackとは
 ** ユースケース
 ** 競合するもの
 * 環境構築
 ** 参照するべきドキュメント
 ** 構築手順
 ** 動作確認方法
 * 使い方・設定方法（メイン）
  ** Logstashでデータを取得する
  *** コンフィグの書き方
  *** データ連携の確認をする
  *** バージョンごとの差異
  ** Kibanaの使い方
  *** グラフの作り方
  *** グラフの解説
 * トラブルシュート
 ** よくあるトラブルと解決法


だいぶ目次っぽくなってきましたね？一旦言いたいことを出しておいて、並び替える。これだけで何を主張したいのか整理することができます。

== 仲間わけしたものに名前をつける

**仲間のかたまりを一言で表すとなんですか？**と聞かれたら、と想像すると良いでしょう。これをそのまま目次として使ってしまうのです。

例えば、

```
- 環境構築
  - 参照するべきドキュメント
  - 構築手順
  - 動作確認方法
```

であれば、``Elastic Stackの環境構築手順``と表現できます。目次はその章の概要を示すことで、「これからどんな話がされますよ」と読者に伝えるためにあります。

「仲間のかたまりを一言で表す」と、目次と内容が違って読みづらい！という失敗を事前に防ぐことができるのです。

== 各項目内で伝わりやすいように順序を入れ替える

このタイミングで各かたまり内のアイデアに``話す順番``をつけてしまいましょう。こうしておくことで**どこから書き始めても論理展開が崩れない**のです。

話したいことだけ先にわーっと書いてしまうと、後から読み返したときに論理展開で矛盾が起きやすくなります。書き直しと推敲で時間がかかってしまうため、先に論理の骨組みを組んでおくことが重要です。締め切りがありますからね！

いいですか？できそうですか？

論理を組んだ後は、忘れないように何かに書き起こしておくと良いでしょう。もふもふちゃんは頭で覚えておいて原稿が書けるタイプ[^1]ですが、TrelloやGitHub issueなどを使って構成を書いておくと良いかもしれません。

[^1]: ツールとかのメンテが面倒なのと、頭の中で推敲を繰り返して論理構成を練るのでツールに書きおこすと手が止まってしまいやすい。

ソフトウェアエンジニアのための文章技術では、Trelloを使っています。一例としてリンクを載せておきますので参考にしてみてください。もう少し細かくカードを切ってもいいかもしれませんね。



[https://trello.com/b/WS4XIl6U/%E3%82%BD%E3%83%95%E3%83%88%E3%82%A6%E3%82%A7%E3%82%A2%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E6%96%87%E7%AB%A0%E6%8A%80%E8%A1%93:embed:cite]




1. **思いつくままに伝えたいことを羅列する**
2. **羅列した項目を仲間わけする**
3. **仲間わけしたものに名前をつける**
4. **各項目内で伝わりやすいように順序を入れ替える**

これで8割は原稿が終わったようなものです！サークル申し込み内容も充実させることができそうですね！

== 参考文献

=== 印刷所関連

* キンコーズ
** https://www.kinkos.co.jp/

* 有限会社ねこのしっぽ
** https://www.shippo.co.jp/neko/

* 株式会社日光企画
** http://www.nikko-pc.com/index/top.html